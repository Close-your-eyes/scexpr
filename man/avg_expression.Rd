% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/avg_expression.R
\name{avg_expression}
\alias{avg_expression}
\title{Average expression}
\usage{
avg_expression(
  obj,
  group = NULL,
  assay = "RNA",
  layer = "data",
  features = NULL,
  cells = NULL,
  split = NULL,
  fun = Matrix::rowMeans,
  fun2 = base::identity
)
}
\arguments{
\item{obj}{seurat object}

\item{group}{group col from meta.data, if NULL, no split (so overall average)}

\item{assay}{assay}

\item{layer}{which layer}

\item{features}{select feature subset}

\item{cells}{select cell subset}

\item{split}{column in meta.data to split by before aggregation}

\item{fun}{aggregation function}

\item{fun2}{function applied after fun, e.g. log1p. base:identity is neutral
fun and does nothing}
}
\value{
matrix with average expression values or list thereof when
!is.null(split)
}
\description{
When layer is data and assay RNA or SCT, values are transformed to linear
space with expm1 before application of fun. This is the default behavior as
in Seurat::AverageExpression. So, averaging happens in linear space. To transform
average values back to log space, provide log1p to fun2.
For simple summation of counts as in Seurat::AggregateExpression, make
layer = "counts" and fun = Matrix::rowSums.
This function does not change levels of group as Seurats functions do.
What a pain!
}
