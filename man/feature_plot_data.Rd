% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_plot_data.R
\name{feature_plot_data}
\alias{feature_plot_data}
\title{Feature plot based on a data frame}
\usage{
feature_plot_data(
  data,
  pt_size = 0.3,
  pt_size_fct = 1,
  col_expr = "tomato2",
  col_non_expr = "grey85",
  col_ex_cells = "grey95",
  col_split = "grey30",
  col_na = "grey50",
  col_binary = F,
  col_pal_c_args = list(name = "spectral", direction = -1),
  col_pal_d_args = list(name = "custom"),
  col_steps = "auto",
  col_steps_nice = T,
  col_legend_args = list(barwidth = 1, barheight = 8, override.aes = list(size = 4),
    title = "..auto..", order = 1),
  legendbreaks = "minmidmax",
  legendlabels = "auto",
  shape_legend_args = list(override.aes = list(size = 4), order = 2),
  shape_legend_hide = F,
  feature_alias = NULL,
  freq_plot = "..auto..",
  freq_pos = c(Inf, Inf),
  freq_size = 4,
  freq_col = "..auto..",
  name_anno = "..auto..",
  name_anno_pos = c("..auto..", "title", "annotation"),
  name_anno_args = list(x = -Inf, y = Inf, hjust = 0, vjust = 1.25, color = NA, fill =
    NA, label.color = NA, size = 4, text.color = "..auto.."),
  theme = colrr::theme_material(white = T, legend_tight = T, text_fun =
    ggplot2::element_text),
  theme_args = list(axis.ticks = ggplot2::element_blank(), axis.text.x =
    ggplot2::element_blank(), axis.text.y = ggplot2::element_blank(), axis.title.x =
    ggplot2::element_blank(), axis.title.y = ggplot2::element_blank(), panel.grid =
    ggplot2::element_blank(), legend.background = ggplot2::element_blank(),
    legend.key.size = grid::unit(0.3, "cm"), legend.key = ggplot2::element_blank(), title
    = ggtext::element_markdown(), plot.title = ggplot2::element_text(margin =
    ggplot2::margin(b = 0, unit = "pt")), strip.text.x = ggplot2::element_text(margin =
    ggplot2::margin(0, 
     0, 0, 0, unit = "pt")), plot.margin = grid::unit(c(1, 1, 1,
    1), "pt"), panel.spacing = grid::unit(2, "pt")),
  facet_scales = c("fixed", "free", "free_x", "free_y"),
  facet_grid_row_var = NULL,
  nrow_inner = NULL,
  ncol_inner = NULL,
  axes_lim_set = list(),
  axes_lim_expand = list(),
  label_filter_cells = T,
  label_center_fun = c("median", "mean"),
  label_nudge = list(),
  label_repel = F,
  label_multi_try = F,
  label_multi_max = 3,
  label_args = list(label.colour = NA, fill = "white", size = 4, color = "black",
    label.padding = ggplot2::unit(rep(1/20, 4), "lines")),
  contour_filter_cells = T,
  contour_rm_outlier = F,
  contour_rm_lowfreq_subcluster = F,
  contour_multi_try = F,
  contour_multi_max = 3,
  contour_col_pal_args = list(name = "custom"),
  contour_args = list(contour_var = "ndensity", breaks = 0.3, linewidth = 0.5),
  contour_label_nudge = list(),
  contour_label_args = list(label.colour = NA, fill = "white", size = 4, color = "black",
    label.padding = ggplot2::unit(rep(1/20, 4), "lines")),
  contour_same_across_split = T,
  contour_expr_freq = F,
  contour_ggnewscale = F,
  contour_fun = ggplot2::geom_density2d,
  contour_path_label = NULL,
  order_discr_explicit = NULL,
  plot_all_across_split = F
)
}
\arguments{
\item{data}{data frame from scexpr::get_data}

\item{pt_size}{point size}

\item{pt_size_fct}{factor of size increase for expressers}

\item{col_expr}{color expressers}

\item{col_non_expr}{color non expressers}

\item{col_ex_cells}{color excluded cells}

\item{col_split}{color for all cells across facets, requires
plot_all_across_split = T and a split_feature in get_data or ...}

\item{col_na}{color for NA values}

\item{col_binary}{dichotomous coloring of expresser and non expresser}

\item{col_pal_c_args}{for continuous color: arguments to colrr::col_pal,
name can be (i) name of a color palette invoking colrr::col_pal, (ii)
a single color or (iii) a vector of colors}

\item{col_pal_d_args}{for discrete color}

\item{col_steps}{NULL to have normal colorbar, auto for default colorsteps,
a single number or a vector of explicit steps; may not work with any number
when col_steps_nice is TRUE; fcexpr:::colorscale_heuristic is used}

\item{col_steps_nice}{algorithmic determination of pretty steps,
see ggplot2::scale_color_stepsn}

\item{col_legend_args}{arguments to ggplot2::guide_colorsteps,
ggplot2::guide_colorbar or ggplot2::guide_legend for binned or continuous
continuous or discrete legend; e.g. add title.theme = ggtext::element_markdown()}

\item{legendbreaks}{a single number, a vector of explicit breaks, or "auto"
for ggplot default or "minmidmax" for three breaks at minimum, middle and
maximum of value range}

\item{legendlabels}{labels for breaks, e.g. c("min", "mid", "max")}

\item{shape_legend_args}{arguments to ggplot2::guide_legend for shapes,
requires a shape_feature in get_data or ...}

\item{shape_legend_hide}{do not show shape legend?}

\item{feature_alias}{named vector of aliases for features, old = new; e.g.
c("FAIM3" = "FCMR", "MS4A1" = "CD20")}

\item{freq_plot}{do plot frequency of expressers? TRUE, FALSE or ..auto..
for decision based on number of SOs}

\item{freq_pos}{where to plot, xy coordinates}

\item{freq_size}{font size of frequency annotation}

\item{name_anno}{name of the plot, any string possible, understands glue
syntax with three possible variables like '{feature} ({freq}) in {feature_cut_ex}',
where freq is global expression frequency and feature_cut_ex is a collapsed
string of feature_cut, feature_cut_expr, and feature_ex; '..auto..' for
algorithmic decision based on freq_plot; freq is removed for meta features;
feature_cut_ex is adjusted if either element is missing}

\item{name_anno_pos}{where to plot name_anno, NULL to omit plotting, '..auto..'
for automatic decision between title, annotation or NULL; title and annotation
simultaneously also possible}

\item{name_anno_args}{arguments to ggplot2::annotate when name_anno_pos
contains 'annotation'}

\item{theme}{ggplot theme to use}

\item{theme_args}{arguments to ggplot2::theme}

\item{facet_scales}{passed as scales argument of facet_wrap, relevant when
number of SO > 1 and/or feature_split is given}

\item{facet_grid_row_var}{forces using facet_grid instead of facet_wrap,
facet_grid_row_var is a string that appears as row label on facets}

\item{nrow_inner}{row number for facets}

\item{ncol_inner}{col number for facets}

\item{axes_lim_set}{set axes limits like
list(UMAP_1 = c(-10,10), UMAP_2 = c(-12,13))}

\item{axes_lim_expand}{extend axes limits, syntax like axes_lim_set}

\item{label_filter_cells}{when feature_label is provided; only consider
cells which are not excluded for label position calculation}

\item{label_center_fun}{how to calculate label position}

\item{label_nudge}{named list of xy-values how to shift labels, names must
be the values of feature_label}

\item{label_repel}{do repel labels to avoid overlap with ggrepel?}

\item{label_multi_try}{try to label split clusters with one label each?}

\item{label_args}{arguments to ggtext::geom_richtext}

\item{contour_filter_cells}{when feature_contour is provided; only consider
cells which are not excluded for contour calculation}

\item{contour_rm_outlier}{per value (group, cluster) in feature_contour: remove
outlier points to avoid ugly contours? uses brathering::outlier}

\item{contour_rm_lowfreq_subcluster}{groups in feature_contour are checked for
split clusters with diptest and mclust, do remove low frequency subclusters
to avoid ugly contours?}

\item{contour_multi_max}{}

\item{contour_col_pal_args}{discrete colors of contours, see col_pal_c_args}

\item{contour_args}{arguments to geom_density_2d}

\item{contour_label_nudge}{one xy value pair to nudge contour_expr_freq
labels}

\item{contour_label_args}{arguments to ggtext::geom_richtext for
contour_expr_freq}

\item{contour_same_across_split}{have the same contours across feature_split
facets}

\item{contour_expr_freq}{do plot expression frequency per group/cluster of
feature_contour}

\item{contour_ggnewscale}{use ggnewscale for colored contours}

\item{contour_fun}{function for contour drawing, either one of:
ggplot2::geom_density2d, geomtextpath::geom_textpath,
geomtextpath::geom_labelpath; geomtexpath functions require a
contour_path_label}

\item{contour_path_label}{if geomtextpath used as contour_fun,
what label to draw, could be an attached meta feature that is unique to each
group or expression frequency via: 'pct'}

\item{plot_all_across_split}{do plot all cells across feature_split in
col_split?}
}
\description{
Feature plot based on a data frame
}
